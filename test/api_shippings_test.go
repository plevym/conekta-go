/*
Conekta API

Testing ShippingsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package conekta_test

import (
	"context"
	"net/http"
	"testing"

	"github.com/plevym/conekta-go"
)

func Test_conekta_ShippingsApiService(t *testing.T) {

	configuration := conekta.NewConfiguration()
	configuration.Host = _basePath
	configuration.Scheme = "http"
	apiClient := conekta.NewAPIClient(configuration)

	t.Run("Test ShippingsApiService OrdersCreateShipping", func(t *testing.T) {
		req := conekta.ShippingRequest{
			Amount:         100,
			Carrier:        conekta.PtrString("FedEx"),
			TrackingNumber: conekta.PtrString("ASDA12312"),
		}
		resp, httpRes, err := apiClient.ShippingsApi.OrdersCreateShipping(context.TODO(), "ord_2tUigJ8DgBhbp6w5D").
			ShippingRequest(req).
			AcceptLanguage("es").
			Execute()

		if err != nil {
			t.Fatalf("expected err nil but was %v", err)
		}
		if resp == nil {
			t.Fatalf("expected resp not nil but was %v", resp)
		}
		if httpRes.StatusCode != http.StatusOK {
			t.Fatalf("expected StatusCode 200 OK but was %d", httpRes.StatusCode)
		}

	})

	t.Run("Test ShippingsApiService OrdersDeleteShipping", func(t *testing.T) {
		resp, httpRes, err := apiClient.ShippingsApi.OrdersDeleteShipping(context.TODO(), "ord_2tUigJ8DgBhbp6w5D", "ship_lin_2tVzNuDGSaDwreMg6").
			AcceptLanguage("es").
			Execute()

		if err != nil {
			t.Fatalf("expected err nil but was %v", err)
		}
		if resp == nil {
			t.Fatalf("expected resp not nil but was %v", resp)
		}
		if httpRes.StatusCode != http.StatusOK {
			t.Fatalf("expected StatusCode 200 OK but was %d", httpRes.StatusCode)
		}

	})

	t.Run("Test ShippingsApiService OrdersUpdateShipping", func(t *testing.T) {
		req := conekta.ShippingRequest{
			Amount:         100,
			Carrier:        conekta.PtrString("FedEx"),
			TrackingNumber: conekta.PtrString("ASDA12312"),
		}
		resp, httpRes, err := apiClient.ShippingsApi.OrdersUpdateShipping(context.TODO(), "ord_2tUigJ8DgBhbp6w5D", "ship_lin_2tVzNuDGSaDwreMg6").
			ShippingRequest(req).
			AcceptLanguage("es").
			Execute()

		if err != nil {
			t.Fatalf("expected err nil but was %v", err)
		}
		if resp == nil {
			t.Fatalf("expected resp not nil but was %v", resp)
		}
		if httpRes.StatusCode != http.StatusOK {
			t.Fatalf("expected StatusCode 200 OK but was %d", httpRes.StatusCode)
		}

	})

}
